ifelse(CDR3_start != -1 & fullSeq != CDR3cur & !is.na(CDR3_start) & !is.na(CDR3_end) & Chain =="beta", "verified_beta", NA)))
data_iedb_full <- data_iedb_full %>% select(-c(CDR3_start, CDR3_end, CDR3_start, CDR3_end))
print("merge all filters")
## merge 4 dfs
data_iedb_filtre <- rbind(data_iedb_curFull, data_iedb_curCal, data_iedb_cur, data_iedb_full) %>% unique()
data_iedb_filtre_alpha <- data_iedb_filtre %>% filter(Chain == "alpha")
data_iedb_filtre_beta <- data_iedb_filtre %>% filter(Chain == "beta")
colnames(data_iedb_filtre_alpha) <- c("Chain_alpha", "fullSeq_alpha", "startCur_alpha", "endCur_alpha","CDR3cur_alpha", "Vcur_alpha", "Jcur_alpha",
"startCal_alpha", "endCal_alpha","CDR3cal_alpha", "Vcal_alpha", "Jcal_alpha",
"Epitope", "Antigen", "Organism", "Cell_subset", "PubMed_ID","pairing_id", "Antigen_identification", "Antigen_type", "CDR3cur_alphaMe","verified_alpha")
colnames(data_iedb_filtre_beta) <- c("Chain_beta", "fullSeq_beta", "startCur_beta", "endCur_beta","CDR3cur_beta", "Vcur_beta", "Jcur_beta",
"startCal_beta", "endCal_beta","CDR3cal_beta", "Vcal_beta", "Jcal_beta",
"Epitope", "Antigen", "Organism", "Cell_subset", "PubMed_ID","pairing_id", "Antigen_identification", "Antigen_type", "CDR3cur_betaMe","verified_beta")
data_iedb_curated <- merge(data_iedb_filtre_alpha, data_iedb_filtre_beta, by = c("Epitope", "Antigen", "Organism", "Cell_subset", "PubMed_ID", "pairing_id", "Antigen_identification", "Antigen_type"), all = T)
#Genes harmonization
data_iedb_curated <- data_iedb_curated %>% mutate(Vcur_alphaMe = ifelse(Vcal_alpha != "", Vcal_alpha, Vcur_alpha),
Jcur_alphaMe = ifelse(Jcal_alpha != "", Jcal_alpha, Jcur_alpha),
Vcur_betaMe = ifelse(Vcal_beta != "", Vcal_beta, Vcur_beta),
Jcur_betaMe = ifelse(Jcal_beta != "", Jcal_beta, Jcur_beta))
data_iedb_curated$Vcur_alphaMe <- gsub(x= data_iedb_curated$Vcur_alphaMe, pattern ="TCR", replacement ="TR")
data_iedb_curated$Jcur_alphaMe <- gsub(x= data_iedb_curated$Jcur_alphaMe, pattern ="TCR", replacement ="TR")
data_iedb_curated$Vcur_betaMe <- gsub(x= data_iedb_curated$Vcur_betaMe, pattern ="TCR", replacement ="TR")
data_iedb_curated$Jcur_betaMe <- gsub(x= data_iedb_curated$Jcur_betaMe, pattern ="TCR", replacement ="TR")
data_iedb_curated <- data_iedb_curated %>% mutate(V_alpha= gsub("\\*0.*","\\1",Vcur_alphaMe),
J_alpha= gsub("\\*0.*","\\1",Jcur_alphaMe),
V_beta= gsub("\\*0.*","\\1",Vcur_betaMe),
J_beta= gsub("\\*0.*","\\1",Jcur_betaMe))
data_iedb_curated <- data_iedb_curated %>% select(CDR3cur_alphaMe, V_alpha, J_alpha, CDR3cur_betaMe, V_beta, J_beta, Epitope, Antigen, Organism, Cell_subset, PubMed_ID, Antigen_identification, Antigen_type, pairing_id, verified_alpha, verified_beta)
colnames(data_iedb_curated) <- c("CDR3_alpha", "V_alpha", "J_alpha", "CDR3_beta", "V_beta", "J_beta", "Epitope", "Antigen", "Antigen_organism", "Cell_subset", "PubMed_ID","Antigen_identification", "Antigen_type", "pairing_id", "verified_alpha", "verified_beta")
##verified score
data_iedb_curated$verified_alpha_beta <- paste(data_iedb_curated$verified_alpha, data_iedb_curated$verified_beta)
data_iedb_curated <- data_iedb_curated %>% mutate(Verified_score = ifelse(is.na(CDR3_alpha) & is.na(CDR3_beta) | verified_alpha_beta == "NA NA",0,
ifelse(is.na(CDR3_alpha) & !is.na(CDR3_beta) | verified_alpha_beta == "NA verified_beta",1.2,
ifelse(!is.na(CDR3_alpha) & is.na(CDR3_beta) | verified_alpha_beta == "verified_alpha NA",1.1,
ifelse(!is.na(CDR3_alpha) & !is.na(CDR3_beta) | verified_alpha_beta == "verified_alpha verified_beta",2, NA)))))
data_iedb_curated <- data_iedb_curated %>% select(-c(verified_alpha, verified_beta, verified_alpha_beta))
data_iedb_curated <- data_iedb_curated %>% relocate(c(CDR3_alpha, V_alpha, J_alpha, CDR3_beta, V_beta, J_beta), .before = Epitope)
data_iedb_curated <- subset(data_iedb_curated, nchar(as.character(data_iedb_curated$CDR3_alpha))<=23 & nchar(as.character(data_iedb_curated$CDR3_alpha))>=6 | nchar(as.character(data_iedb_curated$CDR3_beta))<=23 & nchar(as.character(data_iedb_curated$CDR3_beta))>=6)
data_iedb_curated <- data_iedb_curated %>% mutate(Database = "IEDB") %>% unique()
data_iedb_curated$Antigen_identification[data_iedb_curated$Antigen_identification == "ICS"] <- "Intracellular Cytokine Staining (ICS)"
data_iedb_curated <- data_iedb_curated %>% mutate(Sequencing_method = NA)
data_iedb_curated <- data_iedb_curated %>% relocate(Sequencing_method, .before = Antigen_identification)
data_iedb_curated <- data_iedb_curated %>% select(-pairing_id)
data_iedb_curated <- unique(data_iedb_curated)
##########################################################################################################################################################
rm(data_iedb_CD4, data_iedb_CD48, data_iedb_CD8, col_df_assay_CD8, col_df_assay_CD4, assay_iedb_CD8, assay_iedb_CD4, assay_iedb,                         #
merge_iedb,data_iedb_alpha, data_iedb_beta, data_iedb, data_iedb_curFull, data_iedb_curCal, data_iedb_cur, data_iedb_full, CDR3cur_list, fullSeq_list,#
pos_start_list, pos_end_list, data_iedb_filtre, data_iedb_filtre_alpha, data_iedb_filtre_beta, i, pos)#remove intermediate df                         #
rm(data_iedb_curated)
source("./iedb_curation.R")
# Concatenate all databases
all_database <- rbind(data_iedb_curated, data_vdj_final) %>% rbind(., data_mcpas) %>% unique()
#score
all_database$Antigen_type <- tolower(all_database$Antigen_type)
all_database$Antigen_identification[all_database$Antigen_identification=="intracellular staining"] <- "Intracellular Cytokine Staining (ICS)"
all_database$Antigen_identification[all_database$Antigen_identification==""] <- NA
NoVerified_identification_list <- c("in vivo assay", "limiting-dilution-cloning")
pathology_identification_list <- c("CLA-pos", "CTL clone", "Isolated from a specific tissue under a specific pathology/condition")
InVitroStimulation_identification_list <- c("51 chromium","ELISA","biological activity","Intracellular Cytokine Staining (ICS)","CFSE","3H-thymidine","RNA/DNA detection","binding assay","cultured-T-cells","cultivated-t-cells",
"cytometric bead array","reporter gene assay", "antigen-loaded-targets", "antigen-expressing-targets", "In vitro stimulation", "in vitro assay", "bioassay")
XmersSort_identification_list <- c("surface plasmon resonance (SPR)", "multimer/tetramer", "ELISPOT","tetramer-sort", "dextramer-sort", "streptamer-sort","pelimer-sort","pentamer-sort", "x-ray crystallography")
cell_line_list <- c("cell", "cell line", "tumor cells")
other_list <- c("non-peptidic", "product of organism", "anatomical entity","other")
all_database <- all_database %>% mutate(Identification_score = ifelse(grepl(pattern = "sort", x = Antigen_identification) | Antigen_identification %in% XmersSort_identification_list, 5,
ifelse(Antigen_identification %in% pathology_identification_list, 2,
ifelse(Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & grepl(pattern = "linear peptide", x= Antigen_type) |
Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "antigenic peptide", 4.5,
ifelse(Cell_subset== "CD8" & Antigen_type =="antigenic organism, protein or peptide", 4,
ifelse(Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & grepl(pattern = "linear peptide", x= Antigen_type) |
Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "antigenic peptide", 3.5,
ifelse(Cell_subset== "CD4" & Antigen_type =="antigenic organism, protein or peptide", 3,#it works
ifelse(Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "protein",4.4,
ifelse(Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "protein",3.4,#it works
ifelse(Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "organism",4.3,
ifelse(Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type == "organism",3.3, #it works
ifelse(Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type %in% cell_line_list ,4.2,
ifelse(Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type %in% cell_line_list ,3.2,
ifelse(Cell_subset== "CD8"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type %in% other_list ,4.1,
ifelse(Cell_subset== "CD4"  & !(Antigen_identification %in% NoVerified_identification_list) & Antigen_type %in% other_list ,3.1,
ifelse(Antigen_identification %in% NoVerified_identification_list, 1, 0))))))))))))))))
all_database$Identification_score[is.na(all_database$Identification_score)] <- 0
all_database$Antigen_organism <- gsub("\\[", "", all_database$Antigen_organism)
all_database$Antigen_organism <- gsub("\\]", "", all_database$Antigen_organism)
all_database$Antigen_organism[all_database$Antigen_organism == "CMV"|
all_database$Antigen_organism =="Human herpesvirus 5 strain AD169 (Human cytomegalovirus (strain AD169))"|
all_database$Antigen_organism =="Human herpesvirus 5 (Human cytomegalovirus)"] <- "Cytomegalovirus (CMV)"
all_database$Antigen_organism[all_database$Antigen_organism == "Human papillomavirus type 16 (Human papilloma virus type 16)"|
all_database$Antigen_organism == "Human papilloma virus"|
all_database$Antigen_organism == "HPV"] <- "Human papilloma virus (HPV)"
all_database$Antigen_organism[all_database$Antigen_organism == "Human T-cell leukemia virus type I (Human T cell leukemia virus type 1)"|
all_database$Antigen_organism == "HTLV-1"|
all_database$Antigen_organism == "HTLV-1 (Chronic"] <- "Human T-cell leukemia virus type I (HTLV-1)"
all_database$Antigen_organism[all_database$Antigen_organism == "InfluenzaA"|
all_database$Antigen_organism == "Influenza"|
all_database$Antigen_organism == "H1N1 subtype (H1N1)"] <- "Influenza A virus"
all_database$Antigen_organism[all_database$Antigen_organism == "M. tuberculosis"|
all_database$Antigen_organism == "M.tuberculosis" |
all_database$Antigen_organism == "M.Tuberculosis" |
all_database$Antigen_organism =="Mycobacterium tuberculosis H37Rv (Mycobacterium tuberculosis str. H37Rv)"] <- "Mycobacterium tuberculosis"
all_database$Antigen_organism[all_database$Antigen_organism == "dengue virus type I (Dengue virus 1)"|
all_database$Antigen_organism == "dengue virus type 1 (dengue type 1 D1 virus)"|
all_database$Antigen_organism == "DENV1"] <- "Dengue virus type 1 (Dengue virus 1)"
all_database$Antigen_organism[all_database$Antigen_organism == "E.coli"|
all_database$Antigen_organism == "E.Coli"] <- "Escherichia coli"
all_database$Antigen_organism[all_database$Antigen_organism == "EBV"|
all_database$Antigen_organism == "Human herpesvirus 4 (Epstein Barr virus)"|
all_database$Antigen_organism =="Human herpesvirus 4 strain B95-8 (Epstein-Barr virus (strain B95-8))"] <- "Epstein Barr virus (EBV)"
all_database$Antigen_organism[all_database$Antigen_organism == "HCV"|
all_database$Antigen_organism == "Hepacivirus C"|
all_database$Antigen_organism == "Hepatitis C virus"|
all_database$Antigen_organism == "Hepatitis C virus subtype 3a (Hepatitis C virus 3a)"|
all_database$Antigen_organism == "Hepatitis C virus (isolate BK)"] <- "Hepatitis C virus (HCV)"
all_database$Antigen_organism[all_database$Antigen_organism == "HSV-2"|
all_database$Antigen_organism == "Human herpesvirus 2"] <- "Herpes simplex virus 2 (HSV2)"
all_database$Antigen_organism[all_database$Antigen_organism == "Hepatitis E virus type 3 (Hepatitis E virus genotype 3)"] <- "Hepatitis E virus infection (cHEV)"
all_database$Antigen_organism[all_database$Antigen_organism == "HIV-1"|
all_database$Antigen_organism == "HIV1" |
all_database$Antigen_organism == "Human immunodeficiency virus 1 (human immunodeficiency virus 1 HIV-1)"|
all_database$Antigen_organism =="HIV-1 M:B_HXB2R (Human immunodeficiency virus type 1 (HXB2 ISOLATE))"] <- "Human immunodeficiency virus 1 (HIV-1)"
all_database$Antigen_organism[all_database$Antigen_organism == "HCoV-HKU1"]<- "Human coronavirus HKU1 (CoV-HKU1)"
all_database$Antigen_organism[all_database$Antigen_organism == "NL63-related bat coronavirus"] <- "Human coronavirus NL63 (Coronavirus NL63)"
all_database$Antigen_organism[all_database$Antigen_organism == "Homo sapiens"|
all_database$Antigen_organism == "HomoSapiens"] <- "Homo sapiens (human)"
all_database$Antigen_organism[all_database$Antigen_organism == "Human herpes virus 1"|
all_database$Antigen_organism == "Human herpesvirus 1"] <- "Herpes simplex virus 1 (HSV1)"
all_database$Antigen_organism[all_database$Antigen_organism == "MCPyV"|
all_database$Antigen_organism == "Merkel cell polyomavirus (MCPyV isolate R17b)"] <- "Merkel cell polyomavirus (MCPyV)"
all_database$Antigen_organism[all_database$Antigen_organism == "Pseudomonas aeruginosa"] <- "PseudomonasAeruginosa"
all_database$Antigen_organism[all_database$Antigen_organism == "Saccharomyces cerevisiae (baker's yeast)"] <- "SaccharomycesCerevisiae"
all_database$Antigen_organism[all_database$Antigen_organism == "SARS-CoV-2"|
all_database$Antigen_organism == "COVID-19"] <- "SARS-CoV2"
all_database$Antigen_organism[all_database$Antigen_organism == "Selaginella moellendorffii"] <- "SelaginellaMoellendorffii"
all_database$Antigen_organism[all_database$Antigen_organism == "Triticum aestivum (Canadian hard winter wheat)"] <- "TriticumAestivum"
all_database$Antigen_organism[all_database$Antigen_organism =="DENV3/4"] <- "Dengue virus type 3/4 (Dengue virus 3/4)"
all_database$Antigen_organism[all_database$Antigen_organism =="DENV2"] <- "dengue virus type 2 (Dengue Virus serotype 2)"
all_database$Antigen_organism[all_database$Antigen_organism == "HHV"] <- "Human herpes virus (HHV)"
all_database$Antigen_organism[all_database$Antigen_organism == "Yellow fever virus (Flavivirus febricis)"|
all_database$Antigen_organism == "Yellow fever virus"|
all_database$Antigen_organism == "YFV"] <- "Yellow fever virus (YFV)"
all_database$Antigen_organism[all_database$Antigen_organism == "Hepatitis B virus (Human hepatitis B virus)"] <- "Hepatitis B virus (HBV)"
all_database$Antigen_organism[all_database$Antigen_organism =="Psoriatic arthritis"] <-"Psoriatic Arthritis"
all_database$Antigen_organism[all_database$Antigen_organism =="AdV"] <-"Adenovirus"
all_database$Antigen_organism[all_database$Antigen_organism =="HPV-16"] <-"Human papilloma virus type 16 (HPV-16)"
all_database$Antigen_organism[all_database$Antigen_organism =="human papillomavirus 18 (Human papilloma virus type 18)"] <-"Human papilloma virus type 18 (HPV-18)"
all_database$Antigen_organism[all_database$Antigen_organism =="SARS coronavirus Tor2 (Severe acute respiratory syndrome-related coronavirus Tor2)"] <-"Severe acute respiratory syndrome-related coronavirus Tor2 (SARS-CoV Tor2)"
all_database$Antigen_organism[all_database$Antigen_organism =="SARS-CoV1"] <-"Severe acute respiratory syndrome coronavirus 1 (SARS-CoV1)"
all_database$Antigen_organism[all_database$Antigen_organism =="SARS-CoV2"|
all_database$Antigen_organism =="Severe acute respiratory syndrome coronavirus 2 Wuhan/Hu-1/2019"] <-"Severe acute respiratory syndrome coronavirus 2 (SARS-CoV2)"
orga_precur <- data.frame(Antigen_organism = sort(unique(all_database$Antigen_organism)))
ag_precur <- data.frame(Antigen = sort(unique(all_database$Antigen)))
all_database$Antigen <- ifelse(all_database$Antigen =="", NA, all_database$Antigen)
all_database$Antigen <- gsub("*\\[.*", "", all_database$Antigen)
all_database$Antigen <- tolower(all_database$Antigen)
all_database$Antigen <- gsub(" dq", "dq", all_database$Antigen)
all_database$Antigen <- trimws(all_database$Antigen)#remove leading or trailing whitespace
all_database$Antigen <- gsub(", partial", "", all_database$Antigen)
library(data.table)
all_database <- as.data.table(all_database)
all_database[Antigen %in% c("10 kda culture filtrate antigen esxb", "10 kda culture filtrate antigen esxb (lhp) (cfp10)", "esat-6-like protein esxb", "rv3874"), Antigen := "cfp10"]
all_database[Antigen == "5-hydroxytryptamine receptor 1f", Antigen := "htr1f"]
all_database[Antigen %in% c("55 kda immediate-early protein 1", "ie1", "ul123; ie1", "ie-1"), Antigen := "regulatory protein ie1"]
all_database[Antigen == "5t4", Antigen := "trophoblast glycoprotein"]
all_database[Antigen %in% c("65 kda lower matrix phosphoprotein", "pp65", "hcmvul83"), Antigen := "tegument protein pp65"]
all_database[Antigen %in% c("7b", "orf7b"), Antigen := "orf7b protein"]
all_database[Antigen == "a-kinase anchor protein 13", Antigen := "akap13"][Antigen == "akap13-q8k", Antigen := "akap13-klm-q8k"]
all_database[Antigen == "afmid protein", Antigen := "afmid"]
all_database[Antigen == "alpha-2-macroglobulin-like protein 1", Antigen := "a2ml1"]
all_database[Antigen == "atp-binding cassette sub-family d member 3", Antigen := "abcd3"]
all_database[Antigen %in% c("accessory protein 7a",  "orf7a"), Antigen := "orf7a protein"]
all_database[Antigen == "alanine dehydrogenase", Antigen := "aladh"]
all_database[Antigen == "alpha-gliadin", Antigen := "alpha gliadin"]
all_database[Antigen == "amyloid beta precursor protein binding family b member 2", Antigen := "apbb2"]
all_database[Antigen == "atp-dependent rna helicase dhx33", Antigen := "dhx33"]
all_database[Antigen == "b-cell cll/lymphoma 9-like protein", Antigen := "bcl9l"]
all_database[Antigen %in% c("bcl-2-like protein 1", "otthump00000030552"), Antigen := "bcl2l1"]
all_database[Antigen == "bai1-associated protein 3", Antigen := "baiap3"]
all_database[Antigen %in% c("bmlf-1","bmlf1 protein", "ebv-glc"), Antigen := "bmlf1"]
all_database[Antigen == "brlf-1", Antigen := "brlf1"]
all_database[Antigen == "btb/poz domain-containing protein 1", Antigen := "btbd1"]
all_database[Antigen %in% c("bzlf-1", "trans-activator protein bzlf1", "bzlf"), Antigen := "bzlf1"]
all_database[Antigen == "chromosome 3 open reading frame 58, isoform cra_b", Antigen := "c3orf58"]
all_database[Antigen %in% c("ny-eso-1", "ny-eso-1 protein", "ny-eso", "ny-eso-2", "ny-eso-3", "ny-eso-4",  "ny-eso-5", "ny-eso-6",
"chain c, structural and kinetic basis for heightened immunogenicity of t cell vaccines"), Antigen := "cancer/testis antigen 1"]
all_database[Antigen == "cyclin-dependent kinase 4", Antigen := "cdk4"]
all_database[Antigen %in% c("cellular tumor antigen p53", "tp53"), Antigen := "p53"]
all_database[Antigen == "centromere protein l", Antigen := "cenpl"]
all_database[Antigen == "chromodomain-helicase-dna-binding protein 8", Antigen := "chd8"]
all_database[Antigen == "collagen alpha1(xviii) chain", Antigen := "col18a1"]
all_database[Antigen == "complement c1s subcomponent_9_n1h", Antigen := "c1s"]
all_database[Antigen == "connector enhancer of kinase suppressor of ras 1", Antigen := "cnksr1"]
all_database[Antigen == "dedicator of cytokinesis protein 7", Antigen := "dock7"]
all_database[Antigen %in% c("pol protein", "pol", "polymerase", "protein p", "p protein"), Antigen := "dna polymerase"]
all_database[Antigen == "dna processivity factor", Antigen := "dna polymerase processivity factor"]
all_database[Antigen == "dolichyldiphosphatase 1", Antigen := "dolpp1"]
all_database[Antigen == "probable c-mannosyltransferase dpy19l4", Antigen := "dpy19l4"]
all_database[Antigen == "dna replication complex gins protein psf1", Antigen := "gins1"]
all_database[Antigen == "e3 ubiquitin-protein ligase trim58", Antigen := "trim58"]
all_database[Antigen %in% c("protein e7", "hpv-yml", "e7"), Antigen := "e7 protein"]
all_database[Antigen %in% c("ebna3c latent protein", "ebna-3c"),
Antigen := "ebna3c"][Antigen %in% c("ebna-1 protein", "ebna-1", "nuclear antigen ebna1", "epstein-barr nuclear antigen 1"),
Antigen := "ebna1"][Antigen %in% c("ebna3a nuclear protein", "ebna-3a"),
Antigen := "ebna3a"][Antigen %in% c("ebna-3b nuclear protein",  "ebna- 3b"),
Antigen := "ebna3b"][Antigen == "nuclear antigen ebna-3",
Antigen := "ebna3"][Antigen == "ebna-4", Antigen := "ebna4"][Antigen == "ebna-6", Antigen := "ebna6"]
all_database[Antigen %in% c("elav-like protein 4 (paraneoplastic encephalomyelitis antigen hud) (hu-antigen d)", "elavl4 (paraneoplastic encephalomyelitis antigen hud) (hu-antigen d)"),  Antigen := "elavl4"]
all_database[Antigen == "envelope protein", Antigen := "envelope small membrane protein"]
all_database[Antigen %in% c("esat-6-like protein esxh", "rv0288"), Antigen := "esxh"]
all_database[Antigen %in% c("esxr-like protein", "esat-6-like protein esxr"), Antigen := "esxr"]
all_database[Antigen == "fibronectin type iii domain-containing protein 3b", Antigen := "fndc3b"]
all_database[Antigen == "filamin a", Antigen := "flna"]
all_database[Antigen %in% c("gag", "gag polyprotein", "gag-pol polyprotein", "gag-pol poliprotein"), Antigen := "gag protein"]
all_database[Antigen == "gabaa receptor gamma 3 subunit", Antigen := "gabrg3"]
all_database[Antigen == "galactocerebrosidase", Antigen := "galc"]
all_database[Antigen == "translational activator gcn1", Antigen := "gcn1"]
all_database[Antigen == "golgin subfamily a member 3", Antigen := "golga3"]
all_database[Antigen == "gpi ethanolamine phosphate transferase 1", Antigen := "pign"]
all_database[Antigen == "guanine nucleotide-binding protein-like 3-like protein", Antigen := "gnl3l"]
all_database[Antigen == "h(+)/cl(-) exchange transporter 4", Antigen := "clcn4"]
all_database[Antigen == "hemagglutinin", Antigen := "ha"]
all_database[Antigen == "hemagglutinin ha1", Antigen := "ha1"]
all_database[Antigen %in% c("multispecies: had family hydrolase"), Antigen := "had family hydrolase"]
all_database[Antigen == "haus augmin-like complex subunit 3", Antigen := "haus3"]
all_database[Antigen %in% c("hcv-klv",  "hcv-klv(apc)", "hcv-klv(pe)", "hepatitis c virus core, matrix, envelope and non-structural protein rna."),
Antigen := "genome polyprotein"][Antigen == "hcv-k1y" & Antigen_organism == "Hepatitis C virus (HCV)", Antigen := "genome polyprotein"]
all_database[Antigen == "helicase with zinc finger domain 2", Antigen := "helz2"]
all_database[Antigen == "hemoglobin subunit zeta", Antigen := "hbz"]
all_database[Antigen == "histone acetyltransferase kat6a", Antigen := "kat6a"]
all_database[Antigen %in% c("homeobox protein hox-c9", "hpv-yml"), Antigen := "hoxc9"]
all_database[Antigen %in% c("hsv-2 vp22", "ul49"), Antigen := "tegument protein vp22"]
all_database[Antigen %in% c("htlv-llf", "tax-1", "tax", "transcriptional activator tax"), Antigen := "tax1 protein"]
all_database[Antigen == "hypocretin (orexin) neuropeptide precursor", Antigen := "orexin"]
all_database[Antigen == "interleukin-17 receptor a", Antigen := "il17ra"]
all_database[Antigen == "insulin-like growth factor i", Antigen := "igf1"]
all_database[Antigen == "insulin ii", Antigen := "insulin-2"]
all_database[Antigen == "potassium voltage-gated channel subfamily c member 3", Antigen := "kcnc3"]
all_database[Antigen == "large t antigen", Antigen := "ltag"]
all_database[Antigen %in% c("latent membrane protein 1", "lmp1 protein (epstein-barr virus, putative lydma gene)", "ebv-ylq"), Antigen := "lmp1"]
all_database[Antigen == "latent membrane protein 2", Antigen := "lmp2"]
all_database[Antigen == "m", Antigen := "m protein"]
all_database[Antigen == "melanoma-associated antigen c2", Antigen := "magec2"]
all_database[Antigen %in% c("melanoma-associated antigen 1",  "mage-a1"), Antigen := "magea1"]
all_database[Antigen == "melanoma-associated antigen 3", Antigen := "magea3"]
all_database[Antigen == "melanoma-associated antigen 4", Antigen := "magea4"]
all_database[Antigen == "mitogen-activated protein kinase kinase kinase 2", Antigen := "map3k2"]
all_database[Antigen %in% c("melanoma antigen recognized by t-cells 1",  "melan-a/mart-1", "mlana", "melana/mart1", "mart-1"), Antigen := "mart1"]
all_database[Antigen == "matrix protein (m1)", Antigen := "matrix protein 1"]
all_database[Antigen %in% c("myelin basic protein", "mbp protein"), Antigen := "mbp"]
all_database[Antigen == "nadp-dependent malic enzyme", Antigen := "me1"]
all_database[Antigen == "melanocyte protein pmel", Antigen := "pmel"]
all_database[Antigen == "melanoma-associated antigen 10", Antigen := "magea10"]
# all_database[Antigen == "merops", Antigen := "dq2.5_p.fluor_alpha1a"]
all_database[Antigen == "rrna methyltransferase 1, mitochondrial", Antigen := "mrm1"]
all_database[Antigen == "myopalladin", Antigen := "mypn"]
all_database[Antigen %in% c("n protein",  "nucleocapsid", "nucleocapsid phosphoprotein"), Antigen := "nucleocapsid protein"]
all_database[Antigen == "neb", Antigen := "nebulin"]
all_database[Antigen %in% c("nef", "protein nef"), Antigen := "nef protein"]
all_database[Antigen == "neutral alpha-glucosidase ab", Antigen := "ganab"][Antigen == "ganab-s5f", Antigen := "ganab-sly-s5f"]
all_database[Antigen %in% c("nonstructural protein 1", "non-structural protein 1"), Antigen := "ns1"]
all_database[Antigen %in% c("nonstructural protein ns3", "nonstructural protein 3", "nsp3"), Antigen := "ns3"]
all_database[Antigen == "np", Antigen := "nucleoprotein"]
all_database[Antigen == "nucleocapsid protein", Antigen := "nucleocapsid phosphoprotein"]
all_database[Antigen == "olfactory receptor", Antigen := "or10a3"]
all_database[Antigen %in% c("orf1ab polyprotein", "replicase polyprotein 1ab", "orf1ab"), Antigen := "orf1ab protein"]
all_database[Antigen %in% c("p24", "p24 kk10"), Antigen := "gag p24"]
all_database[Antigen == "polyadenylate-binding protein 1", Antigen := "pabpc1"]
all_database[Antigen == "palmitoyltransferase zdhhc7", Antigen := "zdhhc7"]
all_database[Antigen == "patched domain-containing protein 4", Antigen := "ptchd4"]
all_database[Antigen == "proline-, glutamic acid- and leucine-rich protein 1", Antigen := "pelp1"]
all_database[Antigen == "phosphoglucomutase-like protein 5", Antigen := "pmg5"][Antigen == "pmg5-h5y", Antigen := "pmg5-avg-h5y"]
all_database[Antigen == "phosphorylase b kinase regulatory subunit alpha, liver isoform", Antigen := "phka2"][Antigen == "phka2-lls-sf", Antigen := "phka2-lls-s6f"]
all_database[Antigen == "phosphatidylinositol-4,5-bisphosphate 3-kinase catalytic subunit", Antigen := "pik3ca"]
all_database[Antigen == "ppe-family protein", Antigen := "ppe family protein"]
all_database[Antigen == "probable atp-dependent rna helicase ddx5", Antigen := "ddx5"]
all_database[Antigen == "probable g-protein coupled receptor 174", Antigen := "gpr174"]
all_database[Antigen == "probable oxidoreductase pxdnl", Antigen := "pxdnl"]
all_database[Antigen == "protein njmu-r1", Antigen := "c17orf75"]
all_database[Antigen == "protein shroom2", Antigen := "shroom2"]
all_database[Antigen == "protein ssx2", Antigen := "ssx2"]
all_database[Antigen == "protein transport protein sec24a", Antigen := "sec24a"][Antigen == "sec24a-p5l", Antigen := "sec24a-fly-p5l"]
all_database[Antigen == "protocadherin-16", Antigen := "dchs1"]
all_database[Antigen %in% c("orf10", "putative orf10 protein"), Antigen := "orf10 protein"]
all_database[Antigen == "putative orf9c protein", Antigen := "orf9c protein"]
all_database[Antigen == "putative transcription factor ovo-like 1", Antigen := "ovol1"]
all_database[Antigen == "receptor tyrosine-protein kinase erbb-2", Antigen := "erbb2"]
all_database[Antigen == "rnf19b", Antigen := "rnf19b protein"]
all_database[Antigen == "rt", Antigen := "reverse transcriptase"]
all_database[Antigen == "rv1195", Antigen := "pe family protein"]
all_database[Antigen == "rv3616c", Antigen := "secretion protein espa"]
all_database[Antigen == "ryanodine receptor 3", Antigen := "ryr3"]
all_database[Antigen %in% c("spike glycoprotein s",  "spike protein",  "surface glycoprotein", "s protein", "spike"), Antigen := "spike glycoprotein"]
all_database[Antigen == "sarcospan", Antigen := "sspn"]
all_database[Antigen == "short transient receptor potential channel 1", Antigen := "trpc1"]
all_database[Antigen == "solute carrier family 15 member 2", Antigen := "slc15a2"]
all_database[Antigen == "slc30a8", Antigen := "znt8"]
all_database[Antigen == "spermine oxidase", Antigen := "smox"]
all_database[Antigen == "sorting nexin-24", Antigen := "snx24"]
all_database[Antigen == "sodium channel protein type 3 subunit alpha", Antigen := "scn3a"]
all_database[Antigen == "sterol regulatory element-binding protein 1", Antigen := "srebf1"]
all_database[Antigen == "sushi repeat-containing protein srpx", Antigen := "srpx"]
all_database[Antigen == "sterol-4-alpha-carboxylate 3-dehydrogenase, decarboxylating", Antigen := "nsdhl"][Antigen == "nsdhl-a9v" & Epitope == "^ILT", Antigen := "nsdhl-ilt-9av"][Antigen == "nsdhl-a9v" & Epitope == "^KLV", Antigen := "nsdhl-klv-9av"]
all_database[Antigen == "storkhead-box protein 1", Antigen := "stox1"]
all_database[Antigen == "swi/snf-related matrix-associated actin-dependent regulator of chromatin subfamily d member 3", Antigen := "smarcd3"]
all_database[Antigen == "t-box transcription factor tbx3", Antigen := "tbx3"]
all_database[Antigen == "tead1-(svl)", Antigen := "tead1-svl"][Antigen == "tead1-(vle)", Antigen := "tead1-vle"][Antigen == "tead1-l8f", Antigen := "tead1-vle-l8f"][Antigen == "tead1-l9f", Antigen := "tead1-svl-l9f"][Antigen == "tead1 protein", Antigen := "tead1"]
all_database[Antigen == "telomer length regulation protein tel1", Antigen := "tel1"]
all_database[Antigen == "telomerase reverse transcriptase", Antigen := "tert"]
all_database[Antigen == "tpa: mas-related g protein-coupled receptor c", Antigen := "mrgprf"]
all_database[Antigen == "transient receptor potential cation channel subfamily v member 3", Antigen := "trpv3"]
all_database[Antigen == "transient receptor potential cation channel subfamily v member 4 isoform x1", Antigen := "trpv4 isoform x1"]
all_database[Antigen == "tubulin--tyrosine ligase-like protein 12", Antigen := "ttll12"]
all_database[Antigen == "tyrosinase", Antigen := "tyr"]
all_database[Antigen == "ubiquitin carboxyl-terminal hydrolase 28", Antigen := "usp28"][Antigen == "usp28-c5f", Antigen := "usp28-lii-c5f"]
all_database[Antigen == "v-type proton atpase subunit s1", Antigen := "atp6ap1"]
all_database[Antigen == "vomeronasal type-1 receptor 2", Antigen := "vn1r2"]
all_database[Antigen == "vomeronasal type-1 receptor 5", Antigen := "vn1r5"]
all_database[Antigen == "major capsid protein vp1", Antigen := "vp1"]
all_database[Antigen == "wd repeat-containing protein 46", Antigen := "wdr46"][Antigen == "wdr46-t3i", Antigen := "wdr46-flt-t3i"]
all_database[Antigen == "wilms tumor protein", Antigen := "wt1"]
all_database[Antigen %in% c("yfv-17d", "yfv-llw"), Antigen := "genome polyprotein"]
all_database[Antigen == "zinc finger protein 827", Antigen := "znf827"]
all_database[Antigen == "zinc transporter 8", Antigen := "znt8"]
all_database[Antigen == "complement c1s subcomponent", Antigen := "c1s"]
all_database[Antigen == "m protein", Antigen := "matrix protein"]
# #If you want to have shorter name for many antigen
all_database[Antigen == "45 kda immediate-early protein 2", Antigen := "ie2-45"]
all_database[Antigen == "acetyl-coa carboxylase 2", Antigen := "acc2"]
all_database[Antigen == "alpha-fetoprotein", Antigen := "hafp"]
all_database[Antigen == "alpha-n-acetylgalactosaminide alpha-2,6-sialyltransferase 2 precursor", Antigen := "st6galnac2 precursor"]
all_database[Antigen == "alpha-n-acetylgalactosaminide alpha-2,6-sialyltransferase 3", Antigen := "st6galnac3"]
all_database[Antigen == "alpha 2,8-sialyltransferase", Antigen := "st8"]
all_database[Antigen == "6 kda early secretory antigenic target", Antigen := "esat6"]
all_database[Antigen == "antigen 85-a precursor", Antigen := "antigen 85a precursor"]
all_database[Antigen == "arylacetamide deacetylase-like 4 isoform x1", Antigen := "aadacl4 isoform x1"]
all_database[Antigen == "bcr-abl", Antigen := "bcr_abl"]
all_database[Antigen == "c3 and pzp-like alpha-2-macroglobulin domain-containing protein 8", Antigen := "cpamd8"]
all_database[Antigen == "calcium-independent phospholipase a2", Antigen := "ipal2"]
all_database[Antigen == "chain b, hiv-1 nef protein in complex with r96i mutant fyn sh3 domain", Antigen := "1efn chain b"]
all_database[Antigen == "chain a, spike glycoprotein", Antigen := "spike glycoprotein (chain a)"][Antigen == "chain b, spike glycoprotein", Antigen := "spike glycoprotein (chain b)"]
all_database[Antigen == "chain b, structure of insulin", Antigen := "insulin (chain b)"]
all_database[Antigen == "chain d, tcrhla-dr2bmbp-peptide complex", Antigen := "mbp (chain d)"][Antigen == "chain e, tcrhla-dr2bmbp-peptide complex", Antigen := "mbp (chain e)"]
all_database[Antigen == "chain h, crystal structure of a4b7 headpiece complexed with fab natalizumab", Antigen := "4irz chain h"][Antigen == "chain l, crystal structure of a4b7 headpiece complexed with fab natalizumab", Antigen := "4irz chain l"]
all_database[Antigen == "collagen alpha-1(ii) chain", Antigen := "col2a1"]
all_database[Antigen == "collagen alpha-1(xviii) chain", Antigen := "col18a1"]
all_database[Antigen == "collagen alpha-3(iv) chain", Antigen := "col4a3"]
all_database[Antigen == "condensin-2 complex subunit g2", Antigen := "ncapg2"]
all_database[Antigen == "dj579n16.4", Antigen := "adrenomedullin 2"]
all_database[Antigen == "e3 ubiquitin-protein ligase march11", Antigen := "march11"]
all_database[Antigen == "elavl4 (paraneoplastic encephalomyelitis antigen hud) (hu-antigen d)", Antigen := "elavl4"]
all_database[Antigen == "f-box only protein 40", Antigen := "fbxo40"]
all_database[Antigen == "family with sequence similarity 120a", Antigen := "fam120a"]
all_database[Antigen == "fatty acyl-coa reductase 2", Antigen := "far2"]
all_database[Antigen == "fibrous sheath cabyr-binding protein", Antigen := "fscb"]
all_database[Antigen == "full-length cdna clone cs0di011yn22 of placenta of homo sapiens (human)", Antigen := "legumain"]
all_database[Antigen == "gamma-aminobutyric acid receptor subunit gamma-2", Antigen := "gabrg2"]
all_database[Antigen == "glia-a2", Antigen := "dq2.5-glia-alpha2"]
all_database[Antigen == "hermansky-pudlak syndrome 3 protein", Antigen := "hps3"]
all_database[Antigen == "hsv-slp", Antigen := "envelope glycoprotein d"]
all_database[Antigen %in% c("islet-specific glucose-6-phosphatase-related protein", "islet-specific glucose-6-phosphatase-related protein-related protein"),
Antigen := gsub("islet-specific glucose-6-phosphatase-related protein", "igrp", Antigen)]
all_database[Antigen == "islet-specific glucose-6-phosphatase-related protein isoform 1", Antigen := "igrp isoform 1"]
all_database[Antigen == "ins", Antigen := "proinsulin precursor"]
all_database[Antigen == "inter-alpha-trypsin inhibitor heavy chain h6", Antigen := "itih6"]
all_database[Antigen == "keratinocyte proline-rich protein", Antigen := "kprp"]
all_database[Antigen == "kinesin-like protein kif23", Antigen := "kif23"]
all_database[Antigen == "kinesin-like protein kif2c", Antigen := "kif2c"]
all_database[Antigen == "lmp-2a", Antigen := "lmp2a"]
all_database[Antigen == "mar11-9-f1l", Antigen := "march11-fli-f1l"]
all_database[Antigen == "matrix metalloproteinase-19 isoform x2", Antigen := "mmp19 isoform x2"]
all_database[Antigen == "melan-a a27l", Antigen := "mart1 a27l"]
all_database[Antigen == "membrane-associated phosphatidylinositol transfer protein 1", Antigen := "pitpnm1"]
all_database[Antigen == "multiple epidermal growth factor-like domains protein 6", Antigen := "megf6"]
all_database[Antigen == "multispecies: glutamine synthetase 1", Antigen := "glutamine synthetase 1"]
all_database[Antigen == "n-acetylmuramoyl-l-alanine amidase", Antigen := "n_acetylmuramoyl_l_alanine amidase"]
all_database[Antigen == "neuroblastoma breakpoint family member 1", Antigen := "nbpf1"]
all_database[Antigen == "nitric oxide synthase, brain", Antigen := "neuronal nitric oxide synthase"]
all_database[Antigen == "nlr family card domain-containing protein 4", Antigen := "nlrc4"]
all_database[Antigen == "non-structural polyprotein 1ab", Antigen := "ns1ab"]
all_database[Antigen == "non-structural protein ns4b", Antigen := "ns4b"]
all_database[Antigen == "nuclear pore complex protein nup107", Antigen := "nup107"]
all_database[Antigen == "olfactory receptor 2t1", Antigen := "or2t1"]
all_database[Antigen == "olfactory receptor 6f1", Antigen := "or6f1"]
all_database[Antigen == "olfactory receptor 8d4", Antigen := "or8d4"]
all_database[Antigen == "olfactory receptor 9q2", Antigen := "or9q2"]
all_database[Antigen == "or8b8", Antigen := "or8b8"]
all_database[Antigen == "perilipin-2", Antigen := "plin2"]
all_database[Antigen == "phosphorylase b kinase gamma catalytic chain, skeletal muscle/heart isoform isoform 1", Antigen := "phkg1"]
all_database[Antigen == "photoreceptor cilium actin regulator", Antigen := "pcare"]
all_database[Antigen == "plastin-2", Antigen := "plastin2"]
all_database[Antigen == "plexin-a3", Antigen := "plxna3"]
all_database[Antigen == "plexin-a4", Antigen := "plxna4"]
all_database[Antigen == "plexin-b1 precursor", Antigen := "plxnb1 precursor"]
all_database[Antigen == "prostate-specific antigen", Antigen := "psa"]
all_database[Antigen == "proteasome (prosome, macropain) activator subunit 4", Antigen := "psme4"]
all_database[Antigen == "proton myo-inositol cotransporter", Antigen := "hmit"]
all_database[Antigen == "ras guanyl-releasing protein 2", Antigen := "rasgrp2"]
all_database[Antigen == "replicase polyprotein 1a", Antigen := "orf1a polyprotein"]
all_database[Antigen %in% c("rf10 protein nef", "rw8 protein nef"), Antigen := "nef protein"]
all_database[Antigen == "rho-related gtp-binding protein rhoe", Antigen := "rnd3"]
all_database[Antigen == "rho guanine nucleotide exchange factor 10-like protein", Antigen := "arhgef10l"]
all_database[Antigen == "rna-directed rna polymerase subunit p1 (polymerase basic protein 1) (pb1)", Antigen := "pb1"]
all_database[Antigen == "rv3804c", Antigen := "fbpa"]
all_database[Antigen == "rv3875", Antigen := "esxa"]
all_database[Antigen == "secreted antigen 85-b fbpb (85b) (antigen 85 complex b) (mycolyl transferase 85b) (fibronectin-binding protein b) (extracellular alpha-antigen)", Antigen := "fbpb"]
all_database[Antigen == "secreted antigen 85-c fbpc", Antigen := "fbpc"]
all_database[Antigen == "serine palmitoyltransferase small subunit b", Antigen := "sptssb"]
all_database[Antigen == "serine/threonine-protein kinase 10", Antigen := "stk10"]
all_database[Antigen == "serine/threonine-protein phosphatase pp1-alpha catalytic subunit", Antigen := "ppp1ca"]
all_database[Antigen == "small nuclear ribonucleoprotein g", Antigen := "snrpg"]
all_database[Antigen == "sorting nexin 11", Antigen := "snx11"]
all_database[Antigen == "sodium/glucose cotransporter 4", Antigen := "sglt4"]
all_database[Antigen == "sodium/glucose cotransporter 5", Antigen := "slc5a10"]
all_database[Antigen == "sodium/myo-inositol cotransporter 2", Antigen := "slc5a11"]
all_database[Antigen == "soluble liver antigen/liver pancreas antigen", Antigen := "slalp"]
all_database[Antigen == "solute carrier family 5 member 4", Antigen := "slc5a4"]
all_database[Antigen == "synaptotagmin-like protein 4", Antigen := "sytl4"]
all_database[Antigen == "taste receptor type 1 member 2 precursor", Antigen := "tas1r2 precursor"]
all_database[Antigen == "tetratricopeptide repeat protein 32", Antigen := "ttc32"]
all_database[Antigen == "tetratricopeptide repeat thioredoxin-like 2", Antigen := "ttl2"]
all_database[Antigen == "thymus-specific serine protease", Antigen := "tssp"]
all_database[Antigen == "triosephosphate isomerase", Antigen := "tpi"]
all_database[Antigen == "transcriptional enhancer factor tef-1", Antigen := "tef1"]
all_database[Antigen == "translational activator gcn1", Antigen := "gcn1"]
all_database[Antigen == "transmembrane and coiled-coil domain-containing protein 2", Antigen := "tmco2"]
all_database[Antigen == "transmembrane protein 74b isoform 1", Antigen := "tmem74b isoform 1"]
all_database[Antigen == "tribbles homolog 2", Antigen := "trib2"]
all_database[Antigen == "tripartite motif-containing protein 16", Antigen := "trim16"]
all_database[Antigen == "triplex capsid protein 1", Antigen := "trx1"]
all_database[Antigen == "trophoblast glycoprotein", Antigen := "tpbg"]
all_database[Antigen == "udp-n-acetylglucosamine pyrophosphorylase", Antigen := "uap1"]
all_database[Antigen == "unc-cdk4-1", Antigen := "cdk4"]
all_database[Antigen == "unconventional myosin-x", Antigen := "myo10"]
all_database[Antigen == "unnamed protein product", Antigen := "adgb"]
all_database[Antigen == "uracil-dna glycosylase", Antigen := "udg"]
all_database[Antigen == "vacuolar protein sorting-associated protein 13c", Antigen := "vpa13c"]
all_database[Antigen == "vacuolar protein sorting-associated protein 8 homolog", Antigen := "vps8"]
all_database[Antigen == "zinc finger protein 483", Antigen := "znf483"]
all_database[Antigen == "zinc finger protein 568", Antigen := "znf568"]
all_database[Antigen == "zinc transporter 8 isoform a", Antigen := "znt8 isoform a"]
all_database[Antigen == "cmv-mln", Antigen := "tegument protein pp65 (cmv)"]
all_database[Antigen == "cmv-nv9", Antigen := "tegument protein pp65"]
all_database[Antigen == "orf6", Antigen := "orf6 protein"]
all_database[Antigen == "orf8", Antigen := "orf8 protein"]
all_database[Antigen == "orf9b", Antigen := "orf9b protein"]
all_database[Antigen == "C-C motif chemokine 4", Antigen := "C-C motif chemokine 4-like"]
value_pos <- grep(all_database$Antigen, pattern = "-[a-z]{3}$")
value <- grep(all_database$Antigen, pattern = "-[a-z]{3}$", value = TRUE)
value <- substr(value, 1, nchar(value)-4)
all_database <- all_database[value_pos, Antigen_test := value]
all_database <- all_database[is.na(all_database$Antigen_test), Antigen_test := Antigen]
all_database[, Antigen := NULL]
colnames(all_database)[ncol(all_database)] <- "Antigen"
value_agToChange_pos <- grep(all_database$Antigen, pattern = "-[a-z]{3}-[a-z][1-9][a-z]$")
value_agToChange <- grep(all_database$Antigen, pattern = "-[a-z]{3}-[a-z][1-9][a-z]$", value = TRUE)
value_agToChange_init <- substr(value_agToChange, 1, nchar(value_agToChange) - 8)
value_agToChange_end <- substr(value_agToChange, nchar(value_agToChange) - 3, nchar(value_agToChange))
value_agToChange_final <- paste0(value_agToChange_init, value_agToChange_end)
all_database[value_agToChange_pos, Antigen := value_agToChange_final]
all_database <- all_database %>% relocate(Antigen, .before = Antigen_organism)
all_database <- replace(all_database, all_database=='', NA)#replace all empty value by NA
#Suppress doublons and keep the most documented and fiable data
#check PubMed_id in databases
list_reference_vdj <- all_database %>% filter(Database == "VDJdb") %>% select(PubMed_ID) %>% unique() %>% unlist()
list_reference_iedb <- all_database %>% filter(Database == "IEDB") %>% select(PubMed_ID) %>% unique() %>% unlist()
list_reference_mcpas <- all_database %>% filter(Database == "Mc-PAS") %>% select(PubMed_ID) %>% unique() %>% unlist()
all_database[, row_id := 1:nrow(all_database)]
all_database_toCur <- all_database %>% #found duplicate row with same CDR3,Antigen, Antigen_organism, epitope and cell_subset
group_by(CDR3_alpha, V_alpha, J_alpha,CDR3_beta, V_beta, J_beta, Epitope, Antigen, Antigen_organism, Cell_subset, PubMed_ID) %>%
mutate(doublon = n()) %>% filter(doublon >1)
all_database_toCur <- all_database_toCur %>%
mutate(seq_id = paste(CDR3_alpha,V_alpha, J_alpha, CDR3_beta, V_beta, J_beta, Epitope, Antigen, Antigen_organism, Cell_subset,PubMed_ID, sep = "_"))
all_database_toCur_list <- split(all_database_toCur, f = all_database_toCur$seq_id)
row_toKeep_list <- list()
for(i in names(all_database_toCur_list)){
print(i)
row_toKeep_df <- all_database_toCur_list[[i]] %>% filter(Identification_score == max(Identification_score))
row_toKeep_df <- row_toKeep_df %>% filter(Verified_score == max(Verified_score)) %>% as.data.frame()
if(nrow(row_toKeep_df)>1){#if more that one line is kept
#print(paste0("Database number :",n_distinct(row_toKeep_df$Database)))
if(n_distinct(row_toKeep_df$Database)==1){#if duplicated rows in one single database
if(!is.na(row_toKeep_df$Sequencing_method)&&row_toKeep_df$Sequencing_method!="other"){
row_toKeep_df <- row_toKeep_df %>% filter(!is.na(Sequencing_method)&Sequencing_method !="other")#on prend la (les) ligne(s) qui a (ont) une mÃ©thode de sÃ©quenÃ§age
row_toKeep_df <-row_toKeep_df[1,]#si plusieurs, on prend la 1ere arbitrairement
}else{row_toKeep_df <-row_toKeep_df[1,]}
}else{#if duplicated rows in multiple databases
if(is.na(row_toKeep_df$Sequencing_method) || row_toKeep_df$Sequencing_method =="other"){
print(1)
row_toKeep_df <- row_toKeep_df %>% filter(!is.na(Sequencing_method)&Sequencing_method !="other")
row_toKeep_df <-row_toKeep_df[1,]
}else{#si pas de NA dans sequencing_method
print(2)
print(row_toKeep_df)
#row_toKeep_df <- row_toKepp_df %>% filter(Database =="VDJdb")#on prend la (les) ligne(s) qui est (sont) dans VDJdb (car plus specifique)
row_toKeep_df <-subset(x = row_toKeep_df, Database =="VDJdb")
row_toKeep_df <-row_toKeep_df[1,]#si pluseurs dans VDJdb alors on prend la 1ere ligne
}
}
}
row_toKeep_list[[i]] <- row_toKeep_df
}
row_toKeep_largeDf <- rbindlist(row_toKeep_list)
row_toKeep_largeDf <- row_toKeep_largeDf %>% select(-c(doublon, row_id, seq_id))
all_database_single <- all_database %>%
group_by(CDR3_alpha, V_alpha, J_alpha,CDR3_beta, V_beta, J_beta, Epitope, Antigen, Antigen_organism, Cell_subset, PubMed_ID) %>%
mutate(doublon = n()) %>% filter(doublon ==1)
all_database_single <- all_database_single %>% select(-c(doublon, row_id))
all_database_final <- rbind(all_database_single, row_toKeep_largeDf)
all_database_final$J_beta <- ifelse(grepl(x=all_database_final$J_beta, pattern ="TRBV"), NA, all_database_final$J_beta)
n_distinct(all_database_final[,c("CDR3_alpha", "CDR3_beta")])
View(all_database_final)
#add filters
all_database_human <- read_delim(paste0(directory, "./database_pooled_human_2023_03_15.txt"), delim = "\t")
View(all_database_final)
